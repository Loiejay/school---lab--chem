<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chemical Inventory Manager</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .header-content {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 30px;
        }

        .logo-section {
            display: flex;
            align-items: center;
        }

        .logo-upload-area {
            position: relative;
            width: 80px;
            height: 80px;
            border: 2px dashed rgba(255, 255, 255, 0.3);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
        }

        .logo-upload-area:hover {
            border-color: rgba(255, 255, 255, 0.6);
            background: rgba(255, 255, 255, 0.15);
        }

        .upload-placeholder {
            text-align: center;
            color: rgba(255, 255, 255, 0.8);
        }

        .upload-placeholder svg {
            margin-bottom: 5px;
            opacity: 0.7;
        }

        .upload-placeholder p {
            font-size: 0.7rem;
            margin: 0;
            line-height: 1.2;
        }

        .logo-image {
            width: 100%;
            height: 100%;
            object-fit: contain;
            border-radius: 10px;
        }

        .remove-logo-btn {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 0.8rem;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }

        .remove-logo-btn:hover {
            background: #c0392b;
            transform: scale(1.1);
        }

        .header-text {
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .controls {
            padding: 30px;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .search-section {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 300px;
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .filter-select {
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 1rem;
            background: white;
            cursor: pointer;
        }

        .add-menu-container {
            position: relative;
        }

        .add-menu-button {
            background: linear-gradient(135deg, #27ae60, #229954);
            color: white;
            border: none;
            border-radius: 10px;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1.2rem;
            box-shadow: 0 2px 10px rgba(39, 174, 96, 0.2);
        }

        .add-menu-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(39, 174, 96, 0.3);
        }

        .add-section {
            display: none;
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .add-section.active {
            display: block;
        }

        .add-form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f8f9fa;
        }

        .add-form-header h3 {
            color: #2c3e50;
            font-size: 1.4rem;
            margin: 0;
        }

        .close-btn {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 1rem;
            color: #666;
            transition: all 0.2s ease;
        }

        .close-btn:hover {
            background: #e9ecef;
            color: #333;
        }

        .add-form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .add-form-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
        }

        .input-group {
            display: flex;
            flex-direction: column;
        }

        .input-group label {
            margin-bottom: 5px;
            font-weight: 600;
            color: #2c3e50;
        }

        .input-group input, .input-group select {
            padding: 12px 15px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 1rem;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(52, 152, 219, 0.3);
        }

        .btn-danger {
            background: linear-gradient(135deg, #e74c3c, #c0392b);
            color: white;
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .btn-danger:hover {
            transform: translateY(-1px);
            box-shadow: 0 5px 15px rgba(231, 76, 60, 0.3);
        }

        .results {
            padding: 30px;
        }

        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .results-count {
            font-size: 1.1rem;
            color: #666;
        }

        .chemical-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .chemical-card {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            position: relative;
        }

        .chemical-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.15);
        }

        .chemical-name {
            font-size: 1.3rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .chemical-formula {
            font-family: 'Courier New', monospace;
            background: #f8f9fa;
            padding: 8px 12px;
            border-radius: 6px;
            margin-bottom: 15px;
            font-weight: 600;
            color: #495057;
        }

        .chemical-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
        }

        .detail-item {
            display: flex;
            flex-direction: column;
        }

        .detail-label {
            font-size: 0.85rem;
            color: #666;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .detail-value {
            font-size: 1rem;
            color: #2c3e50;
            font-weight: 500;
        }

        .hazard-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            margin: 2px;
        }

        .hazard-low { background: #d4edda; color: #155724; }
        .hazard-medium { background: #fff3cd; color: #856404; }
        .hazard-high { background: #f8d7da; color: #721c24; }

        .card-actions {
            position: absolute;
            top: 15px;
            right: 15px;
        }

        .menu-button {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 1.2rem;
            color: #666;
        }

        .menu-button:hover {
            background: #e9ecef;
            color: #333;
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            min-width: 120px;
            z-index: 1000;
            display: none;
        }

        .dropdown-menu.active {
            display: block;
        }

        .dropdown-item {
            padding: 10px 15px;
            cursor: pointer;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            font-size: 0.9rem;
            color: #333;
            transition: background-color 0.2s ease;
        }

        .dropdown-item:hover {
            background: #f8f9fa;
        }

        .dropdown-item:first-child {
            border-radius: 8px 8px 0 0;
        }

        .dropdown-item:last-child {
            border-radius: 0 0 8px 8px;
        }

        .dropdown-item.edit {
            color: #f39c12;
        }

        .dropdown-item.delete {
            color: #e74c3c;
        }

        .btn-small {
            padding: 6px 10px;
            font-size: 0.8rem;
            border-radius: 6px;
        }

        .edit-form {
            display: none;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-top: 15px;
            border: 2px solid #e9ecef;
        }

        .edit-form.active {
            display: block;
        }

        .edit-form .input-group {
            margin-bottom: 15px;
        }

        .edit-form .btn-group {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn-success {
            background: linear-gradient(135deg, #27ae60, #229954);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-1px);
            box-shadow: 0 5px 15px rgba(39, 174, 96, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #95a5a6, #7f8c8d);
            color: white;
        }

        .btn-secondary:hover {
            transform: translateY(-1px);
            box-shadow: 0 5px 15px rgba(149, 165, 166, 0.3);
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state svg {
            width: 80px;
            height: 80px;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        @media (max-width: 768px) {
            .search-section {
                flex-direction: column;
            }
            
            .search-input {
                min-width: auto;
            }
            
            .add-section {
                grid-template-columns: 1fr;
            }
            
            .chemical-grid {
                grid-template-columns: 1fr;
            }

            .header-content {
                flex-direction: column;
                gap: 15px;
            }

            .logo-upload-area {
                width: 60px;
                height: 60px;
            }

            .upload-placeholder p {
                font-size: 0.6rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="header-content">
                <div class="logo-section">
                    <div class="logo-upload-area" id="logoUploadArea">
                        <div class="upload-placeholder" id="uploadPlaceholder">
                            <svg width="40" height="40" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
                            </svg>
                            <p>Click to upload school logo</p>
                        </div>
                        <img id="logoImage" class="logo-image" style="display: none;" alt="School Logo">
                        <input type="file" id="logoInput" accept="image/*" style="display: none;">
                        <button class="remove-logo-btn" id="removeLogoBtn" style="display: none;" onclick="removeLogo()">✕</button>
                    </div>
                </div>
                <div class="header-text">
                    <h1>🧪 Chemical Inventory Manager</h1>
                    <p>Manage and search your chemical database offline</p>
                </div>
            </div>
        </div>

        <div class="controls">
            <div class="search-section">
                <input type="text" id="searchInput" class="search-input" placeholder="Search chemicals by name, cubicle, or cabinet...">

                <div class="add-menu-container">
                    <button class="add-menu-button" onclick="toggleAddForm()">
                        <span>➕</span>
                    </button>
                </div>
            </div>

            <div class="add-section" id="addSection">
                <div class="add-form-header">
                    <h3>Add New Chemical</h3>
                    <button class="close-btn" onclick="toggleAddForm()">✕</button>
                </div>
                <div class="add-form-grid">
                    <div class="input-group">
                        <label for="chemName">Chemical Name</label>
                        <input type="text" id="chemName" placeholder="e.g., Sodium Chloride">
                    </div>
                    <div class="input-group">
                        <label for="quantity">Quantity</label>
                        <input type="text" id="quantity" placeholder="e.g., 500g">
                    </div>
                    <div class="input-group">
                        <label for="cubicle">Cubicle</label>
                        <input type="text" id="cubicle" placeholder="e.g., A1">
                    </div>
                    <div class="input-group">
                        <label for="cabinet">Cabinet</label>
                        <input type="text" id="cabinet" placeholder="e.g., Cabinet 1">
                    </div>
                </div>
                <div class="add-form-actions">
                    <button class="btn btn-primary" onclick="addChemical()">Add Chemical</button>
                    <button class="btn btn-secondary" onclick="clearAddForm()">Clear Form</button>
                </div>
            </div>
        </div>

        <div class="results">
            <div class="results-header">
                <h2>Chemical Database</h2>
                <span class="results-count" id="resultsCount">0 chemicals found</span>
            </div>
            <div class="chemical-grid" id="chemicalGrid">
                <div class="empty-state">
                    <svg viewBox="0 0 24 24" fill="currentColor">
                        <path d="M9,2V4H7.5A2.5,2.5 0 0,0 5,6.5V18A2,2 0 0,0 7,20H17A2,2 0 0,0 19,18V6.5A2.5,2.5 0 0,0 16.5,4H15V2H9M11,4V6H13V4H11M7.5,6H16.5A0.5,0.5 0 0,1 17,6.5V8H7V6.5A0.5,0.5 0 0,1 7.5,6M7,10H17V18H7V10Z"/>
                    </svg>
                    <h3>No chemicals in database</h3>
                    <p>Add your first chemical using the form above</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Chemical database stored in localStorage
        let chemicals = JSON.parse(localStorage.getItem('chemicalDatabase')) || [];

        // Sample data for demonstration
        if (chemicals.length === 0) {
            chemicals = [];
            saveToStorage();
        }

        function saveToStorage() {
            localStorage.setItem('chemicalDatabase', JSON.stringify(chemicals));
        }

        function toggleAddForm() {
            const addSection = document.getElementById('addSection');
            addSection.classList.toggle('active');
        }

        function clearAddForm() {
            document.getElementById('chemName').value = '';
            document.getElementById('quantity').value = '';
            document.getElementById('cubicle').value = '';
            document.getElementById('cabinet').value = '';
        }

        function addChemical() {
            const name = document.getElementById('chemName').value.trim();
            const quantity = document.getElementById('quantity').value.trim();
            const cubicle = document.getElementById('cubicle').value.trim();
            const cabinet = document.getElementById('cabinet').value.trim();

            if (!name) {
                alert('Please enter the chemical name');
                return;
            }

            const newChemical = {
                id: Date.now(),
                name,
                quantity,
                cubicle,
                cabinet
            };

            chemicals.push(newChemical);
            saveToStorage();
            
            // Clear form and hide it
            clearAddForm();
            document.getElementById('addSection').classList.remove('active');
            
            displayChemicals();
        }

        function deleteChemical(id) {
            if (confirm('Are you sure you want to delete this chemical?')) {
                chemicals = chemicals.filter(chem => chem.id !== id);
                saveToStorage();
                displayChemicals();
            }
        }

        function toggleMenu(id) {
            const menu = document.getElementById(`menu-${id}`);
            const isActive = menu.classList.contains('active');
            
            // Close all other menus
            document.querySelectorAll('.dropdown-menu').forEach(m => {
                m.classList.remove('active');
            });
            
            // Toggle current menu
            if (!isActive) {
                menu.classList.add('active');
            }
        }

        function editChemical(id) {
            // Close the menu first
            document.getElementById(`menu-${id}`).classList.remove('active');
            
            const editForm = document.getElementById(`edit-form-${id}`);
            const isActive = editForm.classList.contains('active');
            
            // Close all other edit forms
            document.querySelectorAll('.edit-form').forEach(form => {
                form.classList.remove('active');
            });
            
            // Toggle current form
            if (!isActive) {
                editForm.classList.add('active');
            }
        }

        function saveEdit(id) {
            const chemical = chemicals.find(chem => chem.id === id);
            if (!chemical) return;

            const name = document.getElementById(`edit-name-${id}`).value.trim();
            const quantity = document.getElementById(`edit-quantity-${id}`).value.trim();
            const cubicle = document.getElementById(`edit-cubicle-${id}`).value.trim();
            const cabinet = document.getElementById(`edit-cabinet-${id}`).value.trim();

            if (!name) {
                alert('Please enter the chemical name');
                return;
            }

            chemical.name = name;
            chemical.quantity = quantity;
            chemical.cubicle = cubicle;
            chemical.cabinet = cabinet;

            saveToStorage();
            displayChemicals();
        }

        function cancelEdit(id) {
            document.getElementById(`edit-form-${id}`).classList.remove('active');
        }

        function displayChemicals() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            
            let filteredChemicals = chemicals.filter(chemical => {
                const matchesSearch = chemical.name.toLowerCase().includes(searchTerm) ||
                                    (chemical.cubicle && chemical.cubicle.toLowerCase().includes(searchTerm)) ||
                                    (chemical.cabinet && chemical.cabinet.toLowerCase().includes(searchTerm));
                
                return matchesSearch;
            });

            const grid = document.getElementById('chemicalGrid');
            const count = document.getElementById('resultsCount');
            
            count.textContent = `${filteredChemicals.length} chemical${filteredChemicals.length !== 1 ? 's' : ''} found`;

            if (filteredChemicals.length === 0) {
                grid.innerHTML = `
                    <div class="empty-state">
                        <svg viewBox="0 0 24 24" fill="currentColor">
                            <path d="M15.5,14H20.5L22,15.5V20.5L20.5,22H15.5L14,20.5V15.5L15.5,14M16,16V20H20V16H16M10.91,15.26L5,21.17L3.83,20L9.74,14.09L10.91,15.26M16.96,9.04C18.39,7.61 18.39,5.28 16.96,3.86C15.54,2.44 13.21,2.44 11.79,3.86C10.36,5.28 10.36,7.61 11.79,9.04C13.21,10.46 15.54,10.46 16.96,9.04M14.37,5.29C15.22,4.44 16.54,4.44 17.39,5.29C18.24,6.14 18.24,7.46 17.39,8.31C16.54,9.16 15.22,9.16 14.37,8.31C13.53,7.46 13.53,6.14 14.37,5.29Z"/>
                        </svg>
                        <h3>No chemicals found</h3>
                        <p>Try adjusting your search or filters</p>
                    </div>
                `;
                return;
            }

            grid.innerHTML = filteredChemicals.map(chemical => `
                <div class="chemical-card">
                    <div class="card-actions">
                        <button class="menu-button" onclick="toggleMenu(${chemical.id})">⋯</button>
                        <div class="dropdown-menu" id="menu-${chemical.id}">
                            <button class="dropdown-item edit" onclick="editChemical(${chemical.id})">✏️ Edit</button>
                            <button class="dropdown-item delete" onclick="deleteChemical(${chemical.id})">🗑️ Delete</button>
                        </div>
                    </div>
                    <div class="chemical-name">${chemical.name}</div>
                    <div class="chemical-details">
                        <div class="detail-item">
                            <span class="detail-label">Quantity</span>
                            <span class="detail-value">${chemical.quantity || 'N/A'}</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Cubicle</span>
                            <span class="detail-value">${chemical.cubicle || 'N/A'}</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Cabinet</span>
                            <span class="detail-value">${chemical.cabinet || 'N/A'}</span>
                        </div>
                    </div>
                    
                    <div class="edit-form" id="edit-form-${chemical.id}">
                        <div class="input-group">
                            <label>Chemical Name</label>
                            <input type="text" id="edit-name-${chemical.id}" value="${chemical.name}">
                        </div>
                        <div class="input-group">
                            <label>Quantity</label>
                            <input type="text" id="edit-quantity-${chemical.id}" value="${chemical.quantity || ''}">
                        </div>
                        <div class="input-group">
                            <label>Cubicle</label>
                            <input type="text" id="edit-cubicle-${chemical.id}" value="${chemical.cubicle || ''}">
                        </div>
                        <div class="input-group">
                            <label>Cabinet</label>
                            <input type="text" id="edit-cabinet-${chemical.id}" value="${chemical.cabinet || ''}">
                        </div>
                        <div class="btn-group">
                            <button class="btn btn-success btn-small" onclick="saveEdit(${chemical.id})">Save Changes</button>
                            <button class="btn btn-secondary btn-small" onclick="cancelEdit(${chemical.id})">Cancel</button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Event listeners
        document.getElementById('searchInput').addEventListener('input', displayChemicals);

        // Enter key support for adding chemicals
        document.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && e.target.closest('.add-section')) {
                addChemical();
            }
        });

        // Close menus when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.card-actions')) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.classList.remove('active');
                });
            }
        });

        // Logo upload functionality
        function initLogoUpload() {
            const logoUploadArea = document.getElementById('logoUploadArea');
            const logoInput = document.getElementById('logoInput');
            const logoImage = document.getElementById('logoImage');
            const uploadPlaceholder = document.getElementById('uploadPlaceholder');
            const removeLogoBtn = document.getElementById('removeLogoBtn');

            // Load saved logo from localStorage
            const savedLogo = localStorage.getItem('schoolLogo');
            if (savedLogo) {
                showLogo(savedLogo);
            }

            // Click to upload
            logoUploadArea.addEventListener('click', function() {
                logoInput.click();
            });

            // Handle file selection
            logoInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const logoData = e.target.result;
                        localStorage.setItem('schoolLogo', logoData);
                        showLogo(logoData);
                    };
                    reader.readAsDataURL(file);
                }
            });

            function showLogo(logoData) {
                logoImage.src = logoData;
                logoImage.style.display = 'block';
                uploadPlaceholder.style.display = 'none';
                removeLogoBtn.style.display = 'block';
                logoUploadArea.style.border = 'none';
                logoUploadArea.style.background = 'transparent';
            }
        }

        function removeLogo() {
            const logoImage = document.getElementById('logoImage');
            const uploadPlaceholder = document.getElementById('uploadPlaceholder');
            const removeLogoBtn = document.getElementById('removeLogoBtn');
            const logoUploadArea = document.getElementById('logoUploadArea');
            const logoInput = document.getElementById('logoInput');

            localStorage.removeItem('schoolLogo');
            logoImage.style.display = 'none';
            uploadPlaceholder.style.display = 'block';
            removeLogoBtn.style.display = 'none';
            logoUploadArea.style.border = '2px dashed rgba(255, 255, 255, 0.3)';
            logoUploadArea.style.background = 'rgba(255, 255, 255, 0.1)';
            logoInput.value = '';
        }

        // Initialize logo upload
        initLogoUpload();

        // Initial display
        displayChemicals();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'97911ca3f3a69896',t:'MTc1Njg1OTE0Ny4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
